import logging
import os
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from flask import Flask, request, abort
import git  # –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ GitHub

# ===== –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –î–õ–Ø PYTHONANYWHERE =====

# 1. –î–æ–±–∞–≤–ª—è–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
app = Flask(__name__)

# 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–∞
TELEGRAM_TOKEN = os.getenv("6614f8a1f5bb42ff885181823250707")
WEATHERAPI_KEY = os.getenv("8169594634:AAFdGPBKHaoT1cosQqyGhZtD5bWUadaeWq0")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")  # –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–µ–±—Ö—É–∫–∞

# 3. –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ PythonAnywhere)
PROXY_URL = "http://proxy.server:3128"  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–∫—Å–∏ PythonAnywhere

# 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å –ø—Ä–æ–∫—Å–∏
bot = Bot(token=TELEGRAM_TOKEN, proxy=PROXY_URL)
dp = Dispatcher()

# ===== –ö–û–ù–ï–¶ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ò–ó–ú–ï–ù–ï–ù–ò–ô =====

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–≥–æ–¥—ã
WEATHER_EMOJI = {
    'Sunny': '‚òÄÔ∏è',
    'Clear': '‚òÄÔ∏è',
    'Partly cloudy': '‚õÖ',
    'Cloudy': '‚òÅÔ∏è',
    'Overcast': '‚òÅÔ∏è',
    'Mist': 'üå´Ô∏è',
    'Fog': 'üåÅ',
    'Light rain': 'üå¶Ô∏è',
    'Moderate rain': 'üåßÔ∏è',
    'Heavy rain': '‚õàÔ∏è',
    'Light snow': '‚ùÑÔ∏è',
    'Moderate snow': '‚ùÑÔ∏è',
    'Heavy snow': '‚ùÑÔ∏è',
    'Thunderstorm': '‚õàÔ∏è',
}


def get_weather_emoji(condition: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–≥–æ–¥–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è"""
    for key, emoji in WEATHER_EMOJI.items():
        if key.lower() in condition.lower():
            return emoji
    return 'üå§Ô∏è'


async def get_weather_data(city: str) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ WeatherAPI —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        url = f"http://api.weatherapi.com/v1/current.json?key={WEATHERAPI_KEY}&q={city}&lang=ru"
        response = requests.get(url, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—à–∏–±–æ–∫
        return response.json()
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ WeatherAPI: {e}")
        return None
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None


def format_weather_message(data: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –≤ —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        location = data['location']
        current = data['current']

        city = location['name']
        country = location['country']
        temp = current['temp_c']
        feels_like = current['feelslike_c']
        condition = current['condition']['text']
        wind = current['wind_kph']
        humidity = current['humidity']
        pressure = current['pressure_mb']

        weather_emoji = get_weather_emoji(condition)

        return (
            f"{weather_emoji} <b>–ü–æ–≥–æ–¥–∞ –≤ {city}, {country}</b>\n\n"
            f"üå°Ô∏è <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
            f"‚òÅÔ∏è <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ:</b> {condition}\n"
            f"üí® <b>–í–µ—Ç–µ—Ä:</b> {wind} –∫–º/—á\n"
            f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
            f"üìä <b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure} –º–±–∞—Ä"
        )
    except KeyError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ"
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞"


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üå§Ô∏è –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π WeatherAPI.\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <i>–ú–æ—Å–∫–≤–∞</i> –∏–ª–∏ <i>London</i>",
        parse_mode="HTML"
    )


@dp.message(lambda message: message.text)
async def handle_weather_request(message: Message):
    city = message.text.strip()

    if len(city) > 50:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    await bot.send_chat_action(message.chat.id, "typing")

    weather_data = await get_weather_data(city)

    if weather_data is None:
        await message.answer("üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    if 'error' in weather_data:
        error_msg = weather_data['error'].get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {error_msg}")
        return

    weather_message = format_weather_message(weather_data)
    await message.answer(weather_message, parse_mode="HTML")


# ===== –í–ï–ë–•–£–ö-–†–ï–ñ–ò–ú –î–õ–Ø PYTHONANYWHERE =====

# 5. –ü—É—Ç—å –¥–ª—è –≤–µ–±—Ö—É–∫–∞ —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º
WEBHOOK_PATH = f"/{WEBHOOK_SECRET}"


@app.route(WEBHOOK_PATH, methods=['POST'])
async def webhook():
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram"""
    if request.method == "POST":
        # –ü–æ–ª—É—á–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
        if request.headers.get('X-Telegram-Bot-Api-Secret-Token') != WEBHOOK_SECRET:
            logger.warning("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –≤–µ–±—Ö—É–∫–∞!")
            abort(403)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        update = types.Update(**request.json)
        await dp.feed_update(bot, update)
        return "ok", 200
    return "Method Not Allowed", 405


@app.route('/')
def home():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return "Weather Bot is running!", 200


# 6. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ GitHub
@app.route('/update', methods=['POST'])
def update():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è GitHub"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–∞ GitHub (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–µ–±—Ö—É–∫–∞)
    if request.method == 'POST':
        repo = git.Repo('/home/yourusername/mybot')  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø—É—Ç—å
        origin = repo.remotes.origin
        origin.pull()

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ touch WSGI-—Ñ–∞–π–ª–∞
        os.system('touch /var/www/yourusername_pythonanywhere_com_wsgi.py')

        return "Updated successfully", 200
    return "Method not allowed", 405


# 7. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Flask
@app.errorhandler(500)
def server_error(e):
    logger.exception("–°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞")
    return "Internal server error", 500


if __name__ == "__main__":
    # 8. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    logger.info("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫...")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π URL –≤–µ–±—Ö—É–∫–∞
    WEBHOOK_URL = f"https://yourusername.pythonanywhere.com{WEBHOOK_PATH}"

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ–±—Ö—É–∫ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π
    bot.delete_webhook()
    bot.set_webhook(
        url=WEBHOOK_URL,
        secret_token=WEBHOOK_SECRET  # –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    )

    logger.info(f"–í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: {WEBHOOK_URL}")

    # 9. –ó–∞–ø—É—Å–∫–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app.run(host='0.0.0.0', port=5000, debug=False)